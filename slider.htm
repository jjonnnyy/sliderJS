<!-- Slider puzzle game -->

<script src="jquery-2.1.4.min.js"></script>
<style>
  #board { position: relative;
           width: 401px;
           height: 401px;
           margin: auto;
           top: 10%;
           background-color: black; }

  .piece { position: absolute;
           width: 99px;
           margin: 1px;
           background-color: white;
           font-family: sans-serif;
           text-align: center;
           line-height: 99px;
           cursor: pointer; }
</style>
<script type="text/javascript">
$(document).ready(function() {
  // Parameters
  var boardWidth = 4;
  var boardHeight = 4;
  var tileSize = 100;
  var startAnimation = 750;
  var moveSpeed = 100;

  var movesMade = 0;

  $('#board').css({width: tileSize*boardWidth+1,
                   height: tileSize*boardHeight+1});

  // Create elements
  // ex: <div class="piece">4</div>
  var numbers = [];
  for (var i = 1; i < (boardWidth*boardHeight); i++) {
    numbers.push(i);
    $('#board').append($('<div class="piece" id="'+i+'">').text(i));
  }
  numbers.push(0); // blank tile

  function getPosition(number) {
    var index = numbers.indexOf(Number(number));
    var x = index % boardWidth;
    var y = Math.floor(index / boardWidth);
    return { index: index, x: x, y: y };
  }

  function moveTile(num, updateDOM) {
    tile = getPosition(num);
    blank = getPosition(0);

    // console.log(num);
    // console.log("Tile:", tile);
    // console.log("Blank:", blank);

    move = 'none';
    if (tile.x == blank.x && tile.y == blank.y + 1) move = 'up';
    if (tile.x == blank.x && tile.y == blank.y - 1) move = 'down';
    if (tile.x == blank.x + 1 && tile.y == blank.y) move = 'left';
    if (tile.x == blank.x - 1 && tile.y == blank.y) move = 'right';
    // console.log (move);

    // Swap positions
    if (move != 'none') {
      numbers[tile.index] = 0;
      numbers[blank.index] = Number(num);
    }

    if (updateDOM) {
      // Move tiles
      tileElement = $('#'+num);
      if (move == 'up') {
        //console.log("Moving up!");
        tileElement.animate({top:"-="+tileSize},
                        {duaration: moveSpeed,
                         complete: testComplete});
      } else if (move == 'down') {
        //console.log("Moving down!");
        tileElement.animate({top:"+="+tileSize},
                        {duaration: moveSpeed,
                         complete: testComplete});
      } else if (move == 'left') {
        //console.log("Moving left!");
        tileElement.animate({left:"-="+tileSize},
                        {duaration: moveSpeed,
                         complete: testComplete});
      } else if (move == 'right') {
        //console.log("Moving right!");
        tileElement.animate({left:"+="+tileSize},
                        {duaration: moveSpeed,
                         complete: testComplete});
      }
    }
    return move;
  }

  // Mess up board
  var randMovesLeft = 500;
  while(randMovesLeft > 0) {
    var tileToMove = Math.random()*boardWidth*boardHeight;
    tileToMove = Math.floor(tileToMove);
    var result = moveTile(tileToMove, false);
    if (result != 'none') randMovesLeft--;
  }

  // Layout board
  numbers.forEach(function(num, index) {
    console.log(num);
    var pos = getPosition(num);
    var top = pos.y * tileSize;
    var left = pos.x * tileSize;
    $('#'+num).delay(50*index).animate({
      left: left,
      top: top
    }, startAnimation);
  });

  // Function to test for completion
  var movesAnimated = 0; // Prevents early completion
  function testComplete() {
    if (movesMade > 0 && movesMade == ++movesAnimated) {
      var inPosition = true;
      for (var i=1; i<(boardWidth*boardHeight); i++) {
        if (numbers[i-1] != i) inPosition = false;
      }
      if (inPosition) alert("COMPLETE!!");
    }
  }

  // On click behaviour
  $('.piece').click(function() {
    var num = $(this).text();
    var move = moveTile(num, true);

    // Increment click counter
    if(move != 'none')
      $('#move_num').text(++movesMade);
  });
});
</script>
<h1>Moves: <span id="move_num">0</span></h1>
<div id="board"></div>
