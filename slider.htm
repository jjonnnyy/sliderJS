<!-- Slider puzzle game

NOTES: start mechanism needs to be changed
most start positions are not solvable.

Instead make number of moves (without animation to scramble up the board)?
-->

<script src="jquery-2.1.4.min.js"></script>
<style>
  #board { position: relative;
           width: 401px;
           height: 401px;
           margin: auto;
           top: 15%;
           background-color: black; }

  .piece { position: absolute;
           width: 99px;
           margin: 1px;
           background-color: white;
           font-family: sans-serif;
           text-align: center;
           line-height: 99px;
           cursor: pointer; }
</style>
<script type="text/javascript">
$(document).ready(function() {
  // Parameters
  var boardWidth = 4;
  var boardHeight = 4;
  var tileSize = 100;
  var startAnimation = 750;
  var moveSpeed = 100;

  $('#board').css({width: tileSize*boardWidth+1,
                   height: tileSize*boardHeight+1});

  var tilePositions = {}; // Tracks tiles

  // Create elements
  // ex: <div class="piece">4</div>
  var numbers = [];
  for (var i = 1; i < (boardWidth*boardHeight); i++)
    numbers.push(i);

  var i = 1;
  while(numbers.length > 0) {
    var index = Math.floor(Math.random() * numbers.length);
    var value = numbers.splice(index, 1)[0];
    tilePositions[value] = i++;
    $('#board').append($('<div class="piece">').text(value));
  }

  // Layout board
  $('.piece').each(function(index) {
    var top = Math.floor(index / boardWidth) * tileSize;
    var left = index % boardWidth * tileSize;
    $(this).delay(50*index).animate({
      left: left,
      top: top
    }, startAnimation);
  });

  // Function to test for completion
  function testComplete() {
    var inPosition = true;
    for (var i=1; i<(boardWidth*boardHeight); i++) {
      if (tilePositions[i] != i) inPosition = false;
    }
    if (inPosition) alert("COMPLETE!!");
  }

  // On click behaviour
  var blankLeft = tileSize * (boardWidth - 1);
  var blankTop = tileSize * (boardHeight - 1);

  $('.piece').click(function() {
    var id = $(this).text();

    tileLeft = Number($(this).css('left').slice(0, -2));
    tileTop = Number($(this).css('top').slice(0, -2));

    move = 'none';
    if (tileLeft == blankLeft && tileTop == blankTop + tileSize) move = 'up';
    if (tileLeft == blankLeft && tileTop == blankTop - tileSize) move = 'down';
    if (tileLeft == blankLeft + tileSize && tileTop == blankTop) move = 'left';
    if (tileLeft == blankLeft - tileSize && tileTop == blankTop) move = 'right';

    if (move == 'up') {
      //console.log("Moving up!");
      $(this).animate({top:"-="+tileSize},
                      {duaration: moveSpeed,
                       complete: testComplete});
      blankTop += tileSize;
      tilePositions[id] -= boardWidth;
    } else if (move == 'down') {
      //console.log("Moving down!");
      $(this).animate({top:"+="+tileSize},
                      {duaration: moveSpeed,
                       complete: testComplete});
      blankTop -= tileSize;
      tilePositions[id] += boardWidth;
    } else if (move == 'left') {
      //console.log("Moving left!");
      $(this).animate({left:"-="+tileSize},
                      {duaration: moveSpeed,
                       complete: testComplete});
      blankLeft += tileSize;
      tilePositions[id] -= 1;
    } else if (move == 'right') {
      //console.log("Moving right!");
      $(this).animate({left:"+="+tileSize},
                      {duaration: moveSpeed,
                       complete: testComplete});
      blankLeft -= tileSize;
      tilePositions[id] += 1;
    }

    // Increment click counter
    if(move != 'none')
      $('#move_num').text(Number($('#move_num').text()) + 1);

    //console.log("tileLeft:", tileLeft, "blankLeft:", blankLeft);
    //console.log("tileTop:", tileTop, "blankTop:", blankTop);
    //console.log("Move:", move);
    console.log(tilePositions);
  });
});
</script>
<h1>Moves: <span id="move_num">0</span></h1>
<div id="board"></div>
